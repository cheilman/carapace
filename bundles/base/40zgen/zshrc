#!/usr/bin/env zsh

#
# Configure zgen and plugins
#

barebones=""

if grep Amazon /etc/system-release >/dev/null 2>/dev/null; then
    barebones="yes"
fi

# zgen
export DISABLE_AUTO_UPDATE=true

export ZGEN_DIR=${CARAPACE_CURRENT_MODULE_PATH}/zgen

if [ -z "$barebones" ]; then
    # zsh-syntax-highlighting
    # config and styles: https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
    export ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets root)
    typeset -gA ZSH_HIGHLIGHT_STYLES
    ZSH_HIGHLIGHT_STYLES[back-quoted-argument]='fg=magenta'
    ZSH_HIGHLIGHT_STYLES[commandseparator]='fg=yellow,bold'
    ZSH_HIGHLIGHT_STYLES[double-hyphen-option]='fg=green,bold'
    ZSH_HIGHLIGHT_STYLES[globbing]='fg=blue,bold'
    ZSH_HIGHLIGHT_STYLES[single-hyphen-option]='fg=green,bold'
    ZSH_HIGHLIGHT_STYLES[redirection]='fg=yellow,bold'
fi

# alias-tips configuration
export ZSH_PLUGINS_ALIAS_TIPS_EXCLUDES="_"

#
# Load zgen stuff
#

source $ZGEN_DIR/zgen.zsh

#
# Enable run-once
#
if ! zgen saved; then
    if [ -z "$barebones" ]; then
        zgen load zsh-users/zsh-syntax-highlighting
        zgen load zsh-users/zsh-autosuggestions

        zgen load romkatv/powerlevel10k powerlevel10k
    fi

    zgen load unixorn/autoupdate-zgen

    zgen load popstas/zsh-command-time

    zgen oh-my-zsh
    if [ -z "$barebones" ]; then
        zgen oh-my-zsh plugins/safe-paste
    fi

    bgnotify_threshold=15
    zgen oh-my-zsh plugins/bgnotify

    zgen oh-my-zsh plugins/catimg

    zgen oh-my-zsh plugins/colorize

    zgen oh-my-zsh plugins/copybuffer
    zgen oh-my-zsh plugins/copypath
    zgen oh-my-zsh plugins/copyfile

    zgen oh-my-zsh plugins/emoji-clock

    zgen oh-my-zsh plugins/golang

    zgen oh-my-zsh plugins/httpie

    zgen save
fi

#
# Override some settings
#

export ZSH_THEME_TERM_TAB_TITLE_IDLE="%30<..<%~%<<"

export ZSH_COMMAND_TIME_MIN_SECONDS=5
export ZSH_COMMAND_TIME_MSG="Execution time: %s"
export ZSH_COMMAND_TIME_COLOR="cyan" # might be overriden by function?
zsh_command_time() {
    if [ -n "$ZSH_COMMAND_TIME" ]; then
        hours=$(($ZSH_COMMAND_TIME/3600))
        min=$(($ZSH_COMMAND_TIME/60))
        sec=$(($ZSH_COMMAND_TIME%60))
        if [ "$ZSH_COMMAND_TIME" -le 60 ]; then
            timer_show="$fg[green]${ZSH_COMMAND_TIME}s"
        elif [ "$ZSH_COMMAND_TIME" -gt 60 ] && [ "$ZSH_COMMAND_TIME" -le 180 ]; then
            timer_show="$fg[yellow]${min}m ${sec}s"
        else
            if [ "$hours" -gt 0 ]; then
                min=$(($min%60))
                timer_show="$fg[red]${hours}h ${min}m ${sec}s"
            else
                timer_show="$fg[red]${min}m ${sec}s"
            fi
        fi
        now="$(date +"%H:%M:%S")"
        printf "$fg_bold[blue][${now}] $fg[cyan]${ZSH_COMMAND_TIME_MSG}${reset_color}\n" "$timer_show"
    fi
}

#
# Print the current time before every command
#

show_current_time() {
  printf "$fg[green]--$fg[yellow]$(date +"%H:%M:%S")$fg[green]--${reset_color}\n"
}
# Not sure I like how spammy this is, but checking it in at least...
#preexec_functions+=(show_current_time)

#!zsh
#
# Functions for managing ssh-agent state
#

# Load https://github.com/wwalker/ssh-find-agent
source "${CARAPACE_CURRENT_MODULE_PATH}/ssh-find-agent.sh"

# Check if the agent is valid/running
function check-ssh-agent() {
  ssh-add -l >&/dev/null
  result=$?

  # 0:  Everything is okay
  # 1:  Agent is up, but empty (no identities)
  # 2+: Can't talk to agent
  if [ $result -eq 0 -o $result -eq 1 ]; then
    return 0
  else
    return $result
  fi
}

# Add my common ssh keys
function ssh-add-my-keys() {
  # Add any with appropriate permissions
  return $(find ~/.ssh -perm 0600 | xargs ssh-add)
}

# Set up ssh
function ssh-setup() {
  # If a symlink for the socket exists, try that
  if SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock" check-ssh-agent; then
    export SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock"
  else
    # Try to load an ssh agent
    ssh_find_agent -a
    if [ $? -ne 0 -o -z "$SSH_AUTH_SOCK" ]; then
      eval $(ssh-agent) > /dev/null
      # We could uncomment this to magically try to load keys on ssh, but let's leave it manual for now.
      #ssh-add -l >/dev/null || alias ssh='ssh-add -l >/dev/null || ssh-add-my-keys && unalias ssh; ssh'
    fi

    # Link it to a known location
    if test "$SSH_AUTH_SOCK" && check-ssh-agent; then
      ln -sf "${SSH_AUTH_SOCK}" "$HOME/.ssh/ssh_auth_sock"
      export SSH_AUTH_SOCK="$HOME/.ssh/ssh_auth_sock"
    fi
  fi
}

alias ssh-prep='ssh-setup && ssh-add-my-keys'

ssh-setup


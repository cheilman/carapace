#!bash
#
# Carapace Minimal bash
#

if [ -n "$CARAPACE_MINIMAL_BASHRC" ]; then
  return 0
fi
export CARAPACE_MINIMAL_BASHRC=1

#
# We're going to track our path in a temporary file, and then save it to a well-known location
#

pathCache="$(mktemp)"

save_path_to_cache ()
{
    /bin/cat >"$pathCache" <<EOF
#
# Path cache file
#
# Generated: $(/bin/date -u)
#

export PATH="$PATH"

EOF
}

#
# Source profile
#

. "$HOME/.profile"

# Disable ^S/^Q flow control
[[ $- == *i* ]] && stty -ixon

#
# Set umask
#
umask 022

#
# Set timezone
#

# Allow it to be overridden at the host
if [ -r "$HOME/.host/timezone" ]; then
    . "$HOME/.host/timezone"
else
    export TZ='America/New_York'
fi

#
# Load system-level environment stuff
#

if [ -f /etc/environment ]; then
    for line in $( cat /etc/environment ) ; do
        export $line
    done
fi

#
# Path Helper Functions
#

# Add to the end of the path.  Doesn't check for duplicates
add_path_back ()
{
    if [[ -d "$*" ]]; then
        if [[ -n "$PATH" ]]; then
            export PATH="$PATH:$*"
        else
            export PATH="$*"
        fi
    fi
}

# Add to the beginning of the path.  Doesn't check for duplicates
add_path_front ()
{
    if [[ -d "$*" ]]; then
        if [[ -n "$PATH" ]]; then
            export PATH="$*:$PATH"
        else
            export PATH="$*"
        fi
    fi
}

#
# Set up some paths
#

export PATH=""

add_path_back "$HOME/bin"
add_path_back "$HOME/bin/carapace"
add_path_back "$HOME/bin/carapace-minimal"
add_path_back "$HOME/.local/bin"
add_path_back "/usr/local/bin"
add_path_back "/usr/bin"
add_path_back "/bin"
add_path_back "/usr/local/sbin"
add_path_back "/usr/sbin"
add_path_back "/sbin"
add_path_back "/usr/X11R6/bin"
add_path_back "/usr/X11/bin"
add_path_back "$HOME/programs/games"
add_path_back "/usr/games"
add_path_back "/var/www/scripts/bin"

#
# Include host scripts
#

if [ -r "$HOME/.host/minimal/bashrc-pre" ]; then
  source "$HOME/.host/minimal/bashrc-pre"
fi

#################
# Shell Options #
#################

#
# Settings
#

set -o braceexpand
set -o emacs
set -o hashall
set -o histexpand
set -o history
set -o monitor
set +o noclobber # YES clobber
set -o notify
set +o physical # NO physical

#
# More settings
#

shopt -u autocd
shopt -s cdspell
shopt -s checkjobs
shopt -s checkwinsize
shopt -s dirspell
shopt -s expand_aliases
shopt -s extglob
shopt -s globstar
shopt -s interactive_comments
shopt -u mailwarn
shopt -s no_empty_cmd_completion
shopt -s nocasematch # Dangerous? I just want it for completions
shopt -s promptvars

#
# Key bindings
#

# emacs bindings
bind -m emacs

# delete previous word (include path components as 'words')
# TODO: Make sure it includes path components
bind '"\C-H": backward-kill-word'

#
# Re-add our bin folder(s) to the path
#
add_path_front "$HOME/usr/bin"
add_path_front "$HOME/home/bin"

# long date format in ls(1)
# https://www.gnu.org/software/coreutils/manual/html_node/Formatting-file-timestamps.html
export TIME_STYLE=long-iso

# Better 'time' command format
# https://unix.stackexchange.com/a/453339
export TIMEFMT=$'\n================\nCPU\t%P\nuser\t%*U\nsystem\t%*S\ntotal\t%*E'

#
# Set up some aliases
# Some of these 'aliases' are functions to allow fancy arguments
#

# Fancy listing
alias ls='ls --color=auto --dereference-command-line-symlink-to-dir'
alias lf='ls -F'
alias la='ls -Fa'
alias ll='ls -Flh'
alias lla='ls -Flha'
alias lll='ls -ltrh'

# Grep stuff
alias grep='grep --color=auto'

if command -v ag &> /dev/null; then
    # We have ag
    rgrep()
    {
        # Note that this doesn't respect .gitignore/.hgignore
        ag -iUf "$@"
    }
else
    # No ag
    rgrep()
    {
        grep -Hid recurse "$@" .
    }
fi

# Less
export LESS="-fFiMRX -x4"
alias less="less $LESS"     # redundant?

# No-X Vim
alias vim='vim -X'
alias view='view -X'

# Text processing
alias trim='sed -e "s/[ \t]*//g"'

# Find out what's running on a (tcp) port
onport()
{
    sudo lsof -w -n -i tcp:"$*"
}

# Fancier tail
alias tl='less +F'

# Don't try to be (too) fancy in our ssh terminal
alias ssh='TERM=xterm-256color ssh'

# Get size of the terminal window
alias termsize='echo $(tput cols)x$(tput lines)'

# Run nicely
alias n='nice -n 10'

# Better less
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# Give unique counts of output
alias uu="sort | uniq -c | sort -n"

# Better pager
export LESS="-FMRiX -x2"
export PAGER=less

# Fancy cat
if bat --version >& /dev/null; then
  alias cat='bat --paging never'
fi

#
# Lots of things stolen from @jessfraz -- https://github.com/jessfraz/dotfiles/blob/master/.aliases
#

# Enable aliases to be sudoâ€™ed
alias sudo='sudo '

# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'

#
# Colorized man pages (from https://github.com/robbyrussell/oh-my-zsh/blob/master/plugins/colored-man-pages/colored-man-pages.plugin.zsh)
#

function man() {
        env \
                LESS_TERMCAP_mb=$(printf "\e[1;34m") \
                LESS_TERMCAP_md=$(printf "\e[1;34m") \
                LESS_TERMCAP_me=$(printf "\e[0m") \
                LESS_TERMCAP_se=$(printf "\e[0m") \
                LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
                LESS_TERMCAP_ue=$(printf "\e[0m") \
                LESS_TERMCAP_us=$(printf "\e[1;32m") \
                PAGER="${commands[less]:-$PAGER}" \
                _NROFF_U=1 \
                PATH="$HOME/bin:$PATH" \
                        man "$@"
}

#
# Load fzf
#

which fzf &>/dev/null
if [ $? -eq 0 ]; then
  eval "$(fzf --bash)"
  # Bind history search
  bind '^R:__fzf_history__'
fi

#
# Prompt
#

carapace_minimal_bash_prompt() {
  local err=$?

  local reset="\\[\\e[0m\\]"

  local green="\\[\\e[0;32m\\]"
  local brown="\\[\\e[0;33m\\]"

  local hired="\\[\\e[1;31m\\]"
  local higreen="\\[\\e[1;32m\\]"
  local hiblue="\\[\\e[1;34m\\]"
  local hicyan="\\[\\e[1;36m\\]"

  local host="$(pretty-hostname)"

  local exitcode=""
  if [ $err -ne 0 ]; then
    exitcode="${hired}:${err}:"
  fi

  export PS1="${green}-[${hiblue}\\u@${host}${green}]----{${higreen}\\w${green}}--\\n${green}--${brown}\\A${green}<> ${hired}${exitcode}\\n${green}--${hicyan}\\$ ${reset}"
}

carapace_prompt_bash_prompt() {
  local exitcode=$1

  local reset="\\[\\e[0m\\]"
  local green="\\[\\e[0;32m\\]"
  local hicyan="\\[\\e[1;36m\\]"

  local running=""
  local suspended=""
  local jbs="$(jobs 2>/dev/null)"
  [[ "$jbs" =~ "Run" ]] && running="--runningjobs"
  [[ "$jbs" =~ "Stop" ]] && suspended="--suspendedjobs"
  carapaceprompt --color --exitcode $exitcode $running $suspended

  export PS1="${green}--${hicyan}\\$ ${reset}"
}

if carapaceprompt --vcs=none &>/dev/null; then
  export PROMPT_COMMAND="carapace_prompt_bash_prompt $?"
else
  export PROMPT_COMMAND=carapace_minimal_bash_prompt
fi

#
# Disable ctrl-s flow control (again)
#

[[ $- == *i* ]] && stty -ixon

#
# Force my bin folders to be first
#

add_path_front "$HOME/bin/carapace"
add_path_front "$HOME/bin"
add_path_front "$HOME/.host/bin"

#
# Complicated toybox magic
#

if toybox --version &>/dev/null; then
  toyboxSupports() {
    local cmd="$1"

    for i in $(toybox); do
      if [ "$cmd" = "$i" ]; then
        return 0
      fi
    done

    return 1
  }

  toyboxCheckAndAlias() {
    local cmd="$1"

    # See if command exists
    if command -v "$cmd" &> /dev/null; then
        return
    fi

    # See if toybox supports the command
    toyboxSupports "$cmd" || return

    # Set up the alias
    alias $cmd='toybox $cmd'
  }

  alias check-toybox-aliases='alias | grep toybox'

  # Add everything (too much)
  #for c in `toybox --list`; do
  #    toyboxCheckAndAlias $c
  #done

  # Add some curated commands we care about
  for c in awk base64 basename bunzip2 bzcat bzip2 cal cat catv cksum clear cut date df diff dirname dos2unix egrep eject fgrep file find ftpget ftpput getopt grep gunzip gzip head hexdump hexedit hostname ifconfig install ip ipaddr iproute kill killall link ln less ls lsusb md5sum mktemp nc netstat nl od patch pgrep ping ping6 pipe_progress printf readlink realpath reboot renice reset route run-parts sed seq sha1sum sha256sum sha3sum sha512sum sleep sort split tail tar tee telnet test time timeout top touch tr traceroute traceroute6 truncate uname unix2dos unzip uptime usleep vi watch wc wget xargs zcat; do
    toyboxCheckAndAlias $c
  done
fi

#
# oh-my-zsh messes with zsh/aliases
#
alias la='ls -Fa'

# History optiosn
export HISTSIZE=16000
export HISTFILE=~/.bash_history
unset HISTFILESIZE

shopt -s cmdhist
shopt -s histappend
shopt -s lithist

#
# Save the final path to the cache file and finalize
#
save_path_to_cache
cp -f "$pathCache" "$HOME/.path-carapace"

#
# Include host scripts
#

if [ -r "$HOME/.host/minimal/bashrc-post" ]; then
  source "$HOME/.host/minimal/bashrc-post"
fi




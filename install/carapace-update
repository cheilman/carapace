#!/usr/bin/env zsh
#
# Update the Carapace system and re-install
#
set -e

#
# Prepare
#

# Force umask
umask 022

# Try to autodetect carapace folder
export CARAPACE="${0:A:h:h}"

if [ ! -d "$CARAPACE" ]; then
    export CARAPACE="$HOME/.carapace"

    if [ ! -d "$CARAPACE" ]; then
        >&2 echo "Unable to find carapace folder!"
        exit 1
    fi
fi

export PATH="$CARAPACE/install:$PATH"
export CARAPACE_MODULES=""
export CARAPACE_INDENT=""

carapace-message "boldcyan" "Carapace Update Starting on folder '$CARAPACE' ..."
export CARAPACE_INDENT=" >"
carapace-message "cyan" "using source folder '$CARAPACE'"

#
# Update main folder
#

( cd $CARAPACE && git pull -q --recurse-submodules )

#
# Update bundles
#
(
    carapace-message "cyan" "updating bundles"
    export CARAPACE_INDENT="  ${CARAPACE_INDENT}"

    cd $CARAPACE/bundles
    for i in *; do
        if [ -d "$i" ]; then
            carapace-message "boldblue" "updating bundle $i"

            # Update bundle if it has its own repo
            (
                cd $i

                if [ -d "./.git" ]; then
                    git pull -q --recurse-submodules
                fi
            )

        fi
    done

    export CARAPACE_INDENT="${CARAPACE_INDENT:2}"
)

#
# Update individual modules
#
module_failed=0
failed_modules=$(mktemp)

(
    if [ ! -w "$failed_modules" ]; then
      carapace-message "boldred" "Can't write failed module names!!"
    fi

		err=0
    carapace-message "cyan" "updating modules"
    export CARAPACE_INDENT="  ${CARAPACE_INDENT}"

    cd $CARAPACE/modules
    for i in *; do
        if [ -d "$i" ]; then
            carapace-update-module "$i" "$(readlink -f $i)" || {
                carapace-message "boldred" "$i module failed!"
                err=1
                echo "$i" >> "$failed_modules"
            }
        fi
    done

    export CARAPACE_INDENT="${CARAPACE_INDENT:2}"

    exit $err
) || module_failed=1

#
# Done
#

carapace-message "boldcyan" "Carapace Update Finished"

if [ $module_failed -ne 0 ]; then
    carapace-message "boldred" "One or more modules failed to update!"

    if [ -r "$failed_modules" ]; then
      export CARAPACE_INDENT="  ${CARAPACE_INDENT}"

      for mod in $(cat "$failed_modules"); do
        carapace-message "red" "!! ${mod}"
      done

      export CARAPACE_INDENT="${CARAPACE_INDENT:2}"
    fi
    exit 1
fi

# Clean up failed module list
rm -f "$failed_modules" &> /dev/null || :

#
# Reinstall
#

if [ "$*" == "--install" ]; then
		carapace-install
fi
